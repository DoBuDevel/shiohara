buildscript {
    ext { springBootVersion = '2.0.4.RELEASE'
	      hibernateVersion = '5.9.1.Final'
		  httpClientVersion = '4.5.2'
		  swaggerVersion = '2.8.0'
		  jgitVersion = '4.11.0.201803080745-r'
		 }
		repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		jcenter()
		}
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    			   classpath("com.eriwen:gradle-js-plugin:2.12.0") }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.eriwen.gradle.js'
apply plugin: 'jacoco'

jar {
    baseName = 'viglet-shiohara'
    version =  '0.1.0'
}

bootJar {
    launchScript()
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

// Combine JS files
task combineSystemJs(type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/js/client-side/src/system"
    dest = "${projectDir}/src/main/resources/js/client-side/build/shSystem.js"
}

task combineFeatureJs(dependsOn: ':combineSystemJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = "${projectDir}/src/main/resources/js/client-side/src/feature"
    dest = "${projectDir}/src/main/resources/js/client-side/build/shFeature.js"
}

task combineAllJs(dependsOn: ':combineFeatureJs', type: com.eriwen.gradle.js.tasks.CombineJsTask) {
    source = ["${projectDir}/src/main/resources/js/client-side/src/main/__shFactory.js", "${projectDir}/src/main/resources/js/client-side/build/shSystem.js", "${projectDir}/src/main/resources/js/client-side/build/shFeature.js"]
    dest = "${projectDir}/src/main/resources/js/client-side/build/shiohara.js"
}

task minifyAllJs(dependsOn: ':combineAllJs', type: com.eriwen.gradle.js.tasks.MinifyJsTask) {
 	source = "${projectDir}/src/main/resources/js/client-side/build/shiohara.js"
    dest = file("${projectDir}/src/main/resources/public/js/dist/shiohara.min.js")
    closure {
        warningLevel = 'QUIET'
    }
}

task stage(dependsOn: ['build', 'clean'])

compileJava.dependsOn(minifyAllJs)

build.mustRunAfter clean

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
    destinationDir = file("store/doc/javadoc")
}

dependencies {
    
    // Spring Boot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-activemq', version:"${springBootVersion}"   
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version:"${springBootVersion}"  
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version:"${springBootVersion}"  
  
  	// Spring
  	compile group: 'org.springframework', name: 'spring-test', version: '5.0.8.RELEASE'
  	
  	// MongoDB
  	compile group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.1.1'
  	//compile group: 'cz.jirutka.spring', name: 'embedmongo-spring', version: '1.3.1'

    // JGit
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: "${jgitVersion}"
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit.archive', version: "${jgitVersion}"
    
    // Jackson
   compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: '2.9.6'
    
    // H2
     compile group: 'com.h2database', name: 'h2', version:'1.4.197'
     
    // JSON
    compile group: 'org.json', name: 'json', version:'20140107'
    
    // Apache Commons
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.16.1'   
    compile group: 'commons-io', name: 'commons-io', version:'2.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    
    // HTTP Client
    compile(group: 'org.apache.httpcomponents', name: 'httpclient', version:"${httpClientVersion}") {
		exclude(module: 'commons-logging')
    }
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version:"${httpClientVersion}"
    
    // JSoup
	compile group: 'org.jsoup', name: 'jsoup', version: '1.8.3'
	
	// Hibernate
	compile group: 'org.hibernate', name: 'hibernate-search-engine', version: "${hibernateVersion}"
	compile group: 'org.hibernate', name: 'hibernate-search-orm', version: "${hibernateVersion}"
	
	// Swagger 2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: "${swaggerVersion}"
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${swaggerVersion}"
	
	// Gson - is used by reCAPTCHA
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	
	/// Payment Slip
	compile group: 'br.com.caelum.stella', name: 'caelum-stella-boleto', version: '2.1.2'
	compile group: 'com.lowagie', name: 'itext', version: '2.1.7'

	
	// WebJars
	compile 'org.webjars.bower:jquery:1.12.4'
	compile 'org.webjars.bower:jquery.ui:1.11.3'
	compile 'org.webjars:bootstrap:3.3.7-1' // Content
	compile 'org.webjars.bower:bootstrap:4.1.1' // Preview
	compile 'org.webjars.bower:moment:2.20.1'
	compile 'org.webjars.bower:angular:1.6.9'
	compile 'org.webjars.bower:ace-builds:1.3.1'
	compile 'org.webjars.bower:tinymce:4.5.8'
	compile 'org.webjars.bower:angular-ui-router:1.0.14'
	compile 'org.webjars.bower:angular-translate:2.17.0'
	compile 'org.webjars.bower:angular-resource:1.6.9'
	compile 'org.webjars.bower:angular-animate:1.6.9'
	compile 'org.webjars.bower:angular-sanitize:1.6.9'
	compile 'org.webjars.bower:angular-bootstrap:2.5.0'
	compile 'org.webjars.bower:angular-cookies:1.6.9'
	compile 'org.webjars.bower:angular-moment:1.2.0'
	compile 'org.webjars.bower:angular-ui-ace:0.2.3'
	compile 'org.webjars.bower:font-awesome:4.7.0'
	compile 'org.webjars.bower:ng-file-upload:12.2.13'
	compile 'org.webjars.bower:angular-ui-notification:0.3.6'
	compile 'org.webjars.bower:angular-ui-tinymce:0.0.19'
	compile 'org.webjars.bower:angular-ui-sortable:0.14.3'
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

test {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    
 jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

bootRun {
    if (project.hasProperty('args')) {
        args project.args.split(',')
    }
}

check.dependsOn jacocoTestReport   

}